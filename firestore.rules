/**
 * @file Firebase Security Rules for CivicAI.
 *
 * @corePhilosophy This ruleset enforces a user-ownership model for user profiles and allows public read access to reports,
 *  but restricts modifications to report owners and authorized authorities.
 *
 * @dataStructure
 *  - /users/{userId}: Stores individual user profiles, accessible only to the owning user.
 *  - /reports/{reportId}: Stores civic issue reports. Readable by anyone, but create/update/delete restricted to the user who created the report or authorized authorities.
 *
 * @keySecurityDecisions
 *  - User listing is disallowed to prevent enumeration.
 *  - Reports are publicly readable to encourage transparency, but writes are strictly controlled.
 *  - The rules enforce that the userId on a Report must match the authenticated user's UID when the report is created.
 *  - Only authenticated users can create reports.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile documents.
     * @path /users/{userId}
     * @allow (create) - A user can create their own profile if the userId matches their auth UID.
     * @allow (get, list, update, delete) - A user can only access their own profile.
     * @deny (create) - A user cannot create a profile for another user.
     * @deny (get, list, update, delete) - A user cannot access another user's profile.
     * @principle Enforces document ownership for user profiles.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId);
      }

      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && isExistingOwner(userId);
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    /**
     * @description Controls access to civic issue reports.
     * @path /reports/{reportId}
     * @allow (get, list) - Anyone can read the reports.
     * @allow (create) - A user can create a report if they are authenticated and the userId matches their auth UID.
     * @allow (update, delete) - Only the user who created the report or an authorized authority can modify/delete it.
     * @deny (create) - A user cannot create a report with a userId that doesn't match their auth UID.
     * @deny (update, delete) - A user cannot modify/delete a report they don't own or if they are not an authorized authority.
     * @principle Allows public read access but restricts writes to owners and authorized authorities.
     */
    match /reports/{reportId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

        function isExistingOwner(reportId) {
          return get(/databases/$(database)/documents/reports/$(reportId)).data.userId == request.auth.uid;
        }

      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && isExistingOwner(reportId);
      allow delete: if isSignedIn() && isExistingOwner(reportId);
    }
  }
}